{"version":3,"sources":["components/TimelineRowItem.jsx","components/TimelineRow.jsx","timelineItems.js","components/Timeline.jsx","assignLanes.js","index.js"],"names":["TimelineRowItem","timelineItem","editMode","timelineRowItem","useRef","isFirstRender","useState","name","inputText","setInputText","useEffect","current","randomColor","generatePastelColor","style","backgroundColor","R","Math","floor","random","G","B","toString","className","ref","type","onChange","e","target","value","id","start","end","TimelineRow","rowData","map","timelineItems","Timeline","sortedTimelineItems","setSortedTimelineItems","setEditMode","items","sortedItems","sort","a","b","Date","lanes","assignItemToLane","item","lane","length","push","assignLanes","timelineRow","index","rowId","onClick","preventDefault","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.bcb68580.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nfunction TimelineRowItem({ timelineItem, editMode,  }) {\n    const timelineRowItem = useRef();\n    const isFirstRender = useRef(true);\n    const [inputText, setInputText] = useState(timelineItem.name);\n\n    useEffect(() => {\n        if (isFirstRender.current) {\n            isFirstRender.current = false;\n\n            const randomColor = generatePastelColor();\n            timelineRowItem.current.style.backgroundColor = randomColor;\n        }\n    }, [timelineItem]);\n\n    // generate random color for each item. Kinda gross sometimes.\n    // code source: https://stackoverflow.com/questions/67391525/javascript-generate-random-pastel-hex-rgba-color\n    const generatePastelColor = () => {\n        let R = Math.floor(Math.random() * 127 + 127);\n        let G = Math.floor(Math.random() * 127 + 127);\n        let B = Math.floor(Math.random() * 127 + 127);\n\n        let rgb = (R << 16) + (G << 8) + B;\n        return `#${rgb.toString(16)}`;\n    };\n\n    const handleInputText = (e) => {\n        setInputText(e.target.value);\n    }\n\n    return (\n        <div className=\"timelineRow__item\" ref={timelineRowItem}>\n            {!editMode ? <div className=\"timelineRow__item--name\">{timelineItem.name}</div> :\n                <input type=\"text\" onChange={handleInputText} value={inputText} className=\"timelineRow__item--name\" id={`timelineRow__input-${timelineItem.id}`}/>\n            }\n            <div className=\"timelineRow__item--dates\">\n                <div className=\"timelineRow__item--date timelineRow__item--start\">\n                    {timelineItem.start}\n                </div>\n                <div className=\"timelineRow__item--date timelineRow__item--end\">\n                    {timelineItem.end}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default TimelineRowItem;\n","import React, { useState, useEffect } from \"react\";\nimport TimelineRowItem from \"./TimelineRowItem\";\nfunction TimelineRow({ rowData, editMode}) {\n    return (\n        <div className=\"timelineRow__body\">\n            {rowData.map((timelineItem) => (\n                <TimelineRowItem\n                    key={timelineItem.id}\n                    timelineItem={timelineItem}\n                    editMode={editMode}\n                />\n            ))}\n        </div>\n    );\n}\n\nexport default TimelineRow;\n","const timelineItems = [\n  {\n    id: 1,\n    start: \"2021-01-14\",\n    end: \"2021-01-22\",\n    name: \"Recruit translators\",\n  },\n  {\n    id: 2,\n    start: \"2021-01-17\",\n    end: \"2021-01-31\",\n    name: \"Create lesson plan 1\",\n  },\n  {\n    id: 3,\n    start: \"2021-02-05\",\n    end: \"2021-02-13\",\n    name: \"Translate phrases for lesson 1\",\n  },\n  {\n    id: 4,\n    start: \"2021-02-07\",\n    end: \"2021-03-08\",\n    name: \"Create dark mode design\",\n  },\n  {\n    id: 5,\n    start: \"2021-02-14\",\n    end: \"2021-02-22\",\n    name: \"Recruit copyeditors\",\n  },\n  {\n    id: 6,\n    start: \"2021-02-18\",\n    end: \"2021-02-24\",\n    name: \"Proofread translations for lesson 1\",\n  },\n  {\n    id: 7,\n    start: \"2021-02-20\",\n    end: \"2021-02-22\",\n    name: \"Finalize logo\",\n  },\n  {\n    id: 8,\n    start: \"2021-02-21\",\n    end: \"2021-03-22\",\n    name: \"Implement dark mode\",\n  },\n  {\n    id: 9,\n    start: \"2021-02-21\",\n    end: \"2021-02-28\",\n    name: \"Finalize lesson plan 1\",\n  },\n  {\n    id: 10,\n    start: \"2021-02-23\",\n    end: \"2021-02-23\",\n    name: \"Approve logo\",\n  },\n  {\n    id: 11,\n    start: \"2021-03-03\",\n    end: \"2021-03-29\",\n    name: \"Create lesson plan 2\",\n  },\n  {\n    id: 12,\n    start: \"2021-03-30\",\n    end: \"2021-04-08\",\n    name: \"Translate phrases for lesson 2\",\n  },\n  {\n    id: 13,\n    start: \"2021-04-01\",\n    end: \"2021-04-04\",\n    name: \"Debug mobile notification error\",\n  },\n  {\n    id: 14,\n    start: \"2021-04-05\",\n    end: \"2021-04-06\",\n    name: \"Test debugged mobile notifications\",\n  },\n  {\n    id: 15,\n    start: \"2021-04-16\",\n    end: \"2021-04-30\",\n    name: \"Beta test\",\n  },\n  {\n    id: 16,\n    start: \"2021-05-01\",\n    end: \"2021-05-01\",\n    name: \"Launch day\",\n  },\n];\n\nexport default timelineItems;\n","import React, { useState, useEffect } from \"react\";\n\n// importing components\nimport TimelineRow from \"./TimelineRow\";\n//importing css\nimport \"../timeline.css\";\n\n// importing data\nimport timelineItems from \"../timelineItems\";\n// importing helper function\nimport assignLanes from \"../assignLanes\";\n\nconst Timeline = () => {\n    const [sortedTimelineItems, setSortedTimelineItems] = useState([]);\n    const [editMode, setEditMode] = useState(false);\n    const months = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\",\n    ];\n    useEffect(() => {\n        setSortedTimelineItems(assignLanes(timelineItems));\n    }, []);\n\n\n    // does not work\n    const handleEditOnSave = (e) => {\n        e.preventDefault();\n        // setSortedTimelineItems(() => {\n            // sortedTimelineItems.forEach((rows, index) => {\n            //     rows.forEach((item, itemIndex) => {\n            //         item.name = document.getElementById(\"timelineRow__input-\" + item.id).value;\n            //     });\n            // });\n        // });\n        setEditMode(!editMode);\n    };\n\n    return (\n        <div className={`timeline__body`}>\n            {sortedTimelineItems.map((timelineRow, index) => (\n                <TimelineRow\n                    key={index}\n                    rowId={index}\n                    rowData={timelineRow}\n                    editMode={editMode}\n                />\n            ))}\n            <div className=\"edit__btn--body\">\n                {!editMode ? (\n                    <div\n                        className=\"btn edit__btn--edit\"\n                        onClick={() => setEditMode(!editMode)}\n                    >\n                        Edit\n                    </div>\n                ) : (\n                    <div className=\"edit__btn--editting\">\n                        <div\n                            className=\"btn edit__btn--save\"\n                            onClick={handleEditOnSave}\n                        >\n                            Save\n                        </div>\n                        <div\n                            className=\"btn edit__btn--cancel\"\n                            onClick={() => setEditMode(!editMode)}\n                        >\n                            Cancel\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Timeline;\n","/**\n * Takes an array of items and assigns them to lanes based on start/end dates.\n * @returns an array of arrays containing items.\n * Added a loop to sort by end date\n * Added a return of both items orderd by start and by end date\n */\nexport default function assignLanes(items) {\n    const sortedItems = items.sort((a, b) =>\n        new Date(a.start) - new Date(b.start)\n    );\n\n    const lanes = [];\n\n    function assignItemToLane(item) {\n        for (const lane of lanes) {\n            if (new Date(lane[lane.length - 1].end) < new Date(item.start)) {\n                lane.push(item);\n                return;\n            }\n        }\n        lanes.push([item]);\n    }\n\n    for (const item of sortedItems) {\n        assignItemToLane(item);\n    }\n    return lanes;\n}\n","import React from \"react\";\nimport {render} from \"react-dom\";\nimport \"./index.css\";\nimport Timeline from \"./components/Timeline\";\n\nconst App = () => (\n  <div>\n      <h1>Timeline Exercise</h1>\n      <Timeline />\n  </div>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}